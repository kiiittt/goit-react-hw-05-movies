{"version":3,"file":"static/js/493.3e54bb4a.chunk.js","mappings":"+SAKAA,EAAAA,EAAAA,SAAAA,QAFiB,+BAGjBA,EAAAA,EAAAA,SAAAA,OAAwB,CACtBC,QALc,mCAMdC,SAAU,SAGL,IAAMC,EAAmB,mCAAG,+GAERH,EAAAA,EAAAA,IAAU,uBAFF,uBAEvBI,EAFuB,EAEvBA,KAFuB,kBAGxBA,EAAKC,SAHmB,uCAK/BC,QAAQC,IAAI,QAAS,CAAEC,MAAK,OALG,kBAMxB,IANwB,yDAAH,qDAUnBC,EAAiB,mCAAG,WAAMC,GAAN,kGAENV,EAAAA,EAAAA,IAAA,iBAAoBU,IAFd,uBAErBN,EAFqB,EAErBA,KAFqB,kBAGtBA,GAHsB,uCAK7BE,QAAQC,IAAI,QAAS,CAAEC,MAAK,OALC,kBAMtB,IANsB,yDAAH,sDAUjBG,EAAiB,mCAAG,WAAMD,GAAN,kGAENV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,aAFM,uBAErBN,EAFqB,EAErBA,KAFqB,kBAGtBA,EAAKQ,MAHiB,uCAK7BN,QAAQC,IAAI,QAAS,CAAEC,MAAK,OALC,kBAMtB,IANsB,yDAAH,sDAUjBK,EAAiB,mCAAG,WAAMH,GAAN,kGAENV,EAAAA,EAAAA,IAAA,iBAAoBU,EAApB,aAFM,uBAErBN,EAFqB,EAErBA,KAFqB,kBAGtBA,EAAKC,SAHiB,uCAK7BC,QAAQC,IAAI,QAAS,CAAEC,MAAK,OALC,kBAMtB,IANsB,yDAAH,sDAUjBM,EAAgB,mCAAG,WAAMC,GAAN,kGAELf,EAAAA,EAAAA,IAAA,8BAAiCe,IAF5B,uBAEpBX,EAFoB,EAEpBA,KAFoB,kBAIrBA,EAAKC,SAJgB,uCAM5BC,QAAQC,IAAI,QAAS,CAAEC,MAAK,OANA,kBAOrB,IAPqB,yDAAH,qD,yGCS7B,UApDa,WACX,OAAwBQ,EAAAA,EAAAA,UAAS,IAAjC,eAAOJ,EAAP,KAAaK,EAAb,KACQP,GAAYQ,EAAAA,EAAAA,MAAZR,QAWR,OATAS,EAAAA,EAAAA,YAAU,WACR,GAAKT,EAAL,CACA,IAAMU,EAAS,mCAAG,qGACGT,EAAAA,EAAAA,IAAkBD,GADrB,OACVE,EADU,OAEhBK,EAAQL,GAFQ,2CAAH,qDAIfQ,GALoB,CAMrB,GAAE,CAACV,KAGF,yBACGE,EAAKS,OAAS,GACb,wBACGT,EAAKU,KAAI,SAAAC,GAAK,OACb,2BACE,gBACEC,IACE,yCAAkCD,EAAME,eACxCC,EAEFC,IAAKJ,EAAMK,KACXC,QAAS,SAAAC,GACPA,EAAEC,OAAOP,IA5BzB,6EA6Be,KAEH,wBAAKD,EAAMK,QACX,uCAAeL,EAAMS,eAZdT,EAAMU,GADF,OAkBjB,kEAIP,C","sources":["Api.jsx","pages/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '8b801a00c53265c17aedd2cbc707fdf5';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nexport const fetchTrendingMovies = async () => {\n  try {\n    const { data } = await axios.get('/trending/movie/day');\n    return data.results;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\nexport const fetchMovieDetails = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}`);\n    return data;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\nexport const fetchMovieCredits = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/credits`);\n    return data.cast;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\nexport const fetchMovieReviews = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/reviews`);\n    return data.results;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\nexport const fetchMovieSearch = async query => {\n  try {\n    const { data } = await axios.get(`/search/movie?query=${query}`);\n\n    return data.results;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n\n\nexport const fetchMovieVideo = async movieId => {\n  try {\n    const { data } = await axios.get(`/movie/${movieId}/videos`);\n    return data.results;\n  } catch (error) {\n    console.log('error', { error });\n    return [];\n  }\n};\n","import { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCredits } from '../Api';\n\nconst defaultImage =\n  'https://ireland.apollo.olxcdn.com/v1/files/0iq0gb9ppip8-UA/image;s=1000x700';\n\nconst Cast = () => {\n  const [cast, setCast] = useState([]);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    if (!movieId) return;\n    const fetchCast = async () => {\n      const cast = await fetchMovieCredits(movieId);\n      setCast(cast);\n    };\n    fetchCast();\n  }, [movieId]);\n\n  return (\n    <div>\n      {cast.length > 0 ? (\n        <ul>\n          {cast.map(actor => (\n            <li key={actor.id}>\n              <img\n                src={\n                  `https://image.tmdb.org/t/p/w500${actor.profile_path}` ||\n                  defaultImage\n                }\n                alt={actor.name}\n                onError={e => {\n                  e.target.src = defaultImage;\n                }}\n              />\n              <h3>{actor.name}</h3>\n              <p>Character: {actor.character}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>We don't have any cast for this movie</p>\n      )}\n    </div>\n  );\n};\n\nCast.propTypes = {\n  cast: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      character: PropTypes.string.isRequired,\n      profile_path: PropTypes.string.isRequired,\n    })\n  ),\n};\n\nexport default Cast;\n"],"names":["axios","api_key","language","fetchTrendingMovies","data","results","console","log","error","fetchMovieDetails","movieId","fetchMovieCredits","cast","fetchMovieReviews","fetchMovieSearch","query","useState","setCast","useParams","useEffect","fetchCast","length","map","actor","src","profile_path","defaultImage","alt","name","onError","e","target","character","id"],"sourceRoot":""}